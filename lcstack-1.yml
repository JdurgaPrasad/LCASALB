AWSTemplateFormatVersion: '2010-09-09'
Description: 'connections LC for ASG'
Parameters:
  HealthCheckPath:
    Type: String
    Description: "Specify the Health Check Path for target Group"
    Default: "/"
  ALBTargetGroupPort:
    Description: Enter the Port for ALB Target Group
    Type: String
    Default: 80    
  VPC:
    Type: AWS::EC2::VPC::Id
    Description: "Choose the VPC where the Target group should be created"
    Default: vpc-3b83675d
  ALBTargetGroupName:
    Type: String
    Description: "Enter the name of the Target Group"
    Default: "smartworks-alb-tg"
  ALBName:
    Description: Enter the name of ALB
    Type: String
    Default: smartworks-dev-alb
  ImageId:
    Description: "Image Id for EC2"
    Type: String
    Default: ami-0d4761e6d579846f9
  SecurityGroupID:
    Description: "SGID"
    Type: AWS::EC2::SecurityGroup::Id   
    Default: sg-0908f87618a8b122f
  AppSecurityGroup:
    Description: Choose the App Security group
    Type: AWS::EC2::SecurityGroup::Id 
    Default: sg-0908f87618a8b122f
  InstanceType:
    Description: Amazon EC2 instance type for the instances
    Type: String
    AllowedValues:
      - t3.micro
      - t3.small
      - t3.medium
    Default: t3.micro
  myPublicSubnet1:
    Description: "subnet"
    Type: String   
    Default: subnet-9629e0f0
  myPublicSubnet2:
    Description: "subnet"
    Type: String   
    Default: subnet-1ff10857
  mySimpleConfig:
    Description: "Luanch Teplate"
    Type: String   
    Default: lt-0857ccb73da20a2cb
Resources:
  ALBSecurityGroup:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupDescription: 'ALB Security Group For Smartworks'
      #GroupName: !Ref ALBSecurityGroupName
      VpcId: !Ref VPC
      SecurityGroupIngress:
      - IpProtocol: tcp
        FromPort: 443
        ToPort: 443
        SourcePrefixListId: pl-0a2ec869c47a5d4b5
      - IpProtocol: tcp
        FromPort: 80
        ToPort: 80
        SourcePrefixListId: pl-0a2ec869c47a5d4b5
  ALBSecurityGroupEgress:
    Type: 'AWS::EC2::SecurityGroupEgress'
    Properties:
      GroupId: !Ref ALBSecurityGroup           # -> attaches the rule to App Security Group to Solve Circular Dependency
      Description: To App SecurityGroup 
      IpProtocol: tcp
      FromPort: 80
      ToPort: 80
      DestinationSecurityGroupId: !Ref AppSecurityGroup
  smartworksALBTargetGroup:
    Type: "AWS::ElasticLoadBalancingV2::TargetGroup"
    Properties:
      HealthCheckIntervalSeconds: 30
      HealthCheckPath: !Ref HealthCheckPath
      Port: !Ref ALBTargetGroupPort
      Protocol: "HTTP"
      HealthCheckPort: "traffic-port"
      HealthCheckProtocol: "HTTP"
      HealthCheckTimeoutSeconds: 5
      UnhealthyThresholdCount: 2
      TargetType: "instance"
      Matcher: 
        HttpCode: "200"
      HealthyThresholdCount: 5
      VpcId: !Ref VPC
      Name: !Ref ALBTargetGroupName
      HealthCheckEnabled: true
  myServerGroup:
    Type: AWS::AutoScaling::AutoScalingGroup
    Properties:
      VPCZoneIdentifier:
      - !Ref myPublicSubnet1
      LaunchTemplate:
        LaunchTemplateId: lt-0857ccb73da20a2cb
      MinSize: '1'
      MaxSize: '2'
      DesiredCapacity: '2'
      HealthCheckGracePeriod: 300
      MaxInstanceLifetime: 2592000
      TargetGroupARNs: [!Ref smartworksALBTargetGroup] 
    DependsOn:
      - smartworksALBTargetGroup
  connectionsALBListnerHTTP:
    Type: AWS::ElasticLoadBalancingV2::Listener
    Properties:
      DefaultActions:
        - Type: forward
          TargetGroupArn: !Ref smartworksALBTargetGroup
      LoadBalancerArn: !Ref smartworksApplicationLoadBalancer
      Port: 80
      Protocol: HTTP
  smartworksApplicationLoadBalancer:
    Type: AWS::ElasticLoadBalancingV2::LoadBalancer
    Properties:
      Name: !Ref ALBName
      Scheme: internet-facing
      Subnets:  
        - !Ref myPublicSubnet1
        - !Ref myPublicSubnet2
      SecurityGroups: 
      - !Ref ALBSecurityGroup
Outputs:
  DnsName:
    Description: DNS For Load Balancer
    Value: !GetAtt smartworksApplicationLoadBalancer.DNSName
    Export:
      Name: "connections-non-prod-ALB-ENDPOINT"
